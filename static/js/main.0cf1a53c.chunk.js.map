{"version":3,"sources":["boxes-reducer.js","profile-reducer.js","store.js","ColorBox.js","ColorBoxes.js","Profile.js","App.js","index.js"],"names":["makeRandomColor","Math","random","toString","makeNewBox","color","isLocked","makeDeepCopy","obj","JSON","parse","stringify","initialState","reducer","state","action","newState","console","log","type","newBoxes","pop","boxIndex","currentBoxes","map","box","firstName","rootReducer","combineReducers","profile","profileReducer","boxes","boxesReducer","myStore","createStore","ColorBox","props","idx","_allBoxes","style","border","backgroundColor","width","height","btnText","key","onClick","toggleLock","ConnectedColorBoxes","connect","dispatch","randomize","addBox","index","className","ConnectedProfile","onChange","changeEvent","target","value","name","App","ReactDOM","render","store","document","getElementById","window"],"mappings":"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","file":"static/js/main.0cf1a53c.chunk.js","sourcesContent":["\n\nconst makeRandomColor = () => {\n  return '#'+(Math.random()*0xFFFFFF<<0).toString(16);\n}\n\nconst makeNewBox = () => {\n  return {\n    color: makeRandomColor(),\n    isLocked: false\n  }\n}\n\nconst makeDeepCopy = (obj) => {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nconst initialState = [\n  makeNewBox(),\n  makeNewBox(),\n  makeNewBox()\n]\n\nconst reducer = (state = initialState, action) => {\n  const newState = makeDeepCopy(state)\n  console.log(newState)\n\n  if (action.type === 'ADD_BOX') {\n    return [\n      ...newState,\n      makeNewBox()\n    ]\n  } else if (action.type === 'REMOVE_BOX') {\n    const newBoxes = [...newState]\n    newBoxes.pop()\n    return newBoxes\n\n  } else if (action.type === 'TOGGLE_BOX') {\n    const newBoxes = [...newState]\n    newBoxes[action.boxIndex].isLocked = !newBoxes[action.boxIndex].isLocked\n    return newBoxes\n  } else if (action.type === 'RANDOMIZE') {\n    const currentBoxes = [...newState]\n    const newBoxes = currentBoxes.map((box) => {\n      if (!box.isLocked) {\n        box.color = makeRandomColor();\n      }\n      return box;\n    })\n    return newBoxes\n  }\n\n  return newState\n}\n\nexport default reducer;","const initialState = {\n  firstName: \"\"\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === \"UPDATE_PROFILE\") {\n    const newState = {...state};\n\n    newState.firstName = action.firstName\n\n    return newState\n  }\n  return state;\n}\n\nexport default reducer;","import { createStore, combineReducers } from 'redux';\n\nimport boxesReducer from './boxes-reducer';\nimport profileReducer from './profile-reducer';\n\nconst rootReducer = combineReducers({\n  profile: profileReducer,\n  boxes: boxesReducer\n})\n\nconst myStore = createStore(rootReducer);\n\nexport default myStore;","import React from \"react\";\n\nfunction ColorBox (props, idx, _allBoxes) {\n  const style = {\n    border: \"2px solid black\",\n    backgroundColor: props.color,\n    width: \"100px\",\n    height: \"200px\"\n  }\n\n  let btnText = 'Unlocked'\n  if (props.isLocked) {\n    btnText = 'Locked'\n  }\n\n  return (\n    <div key={idx} style={style}>\n      <button onClick={props.toggleLock}>{btnText}</button>\n      <h1>{props.color}</h1>\n    </div>\n  )\n}\n\nexport default ColorBox;","import React from 'react';\nimport {connect} from 'react-redux';\n// import './App.css';\n\nimport ColorBox from './ColorBox';\nimport myStore from './store';\n\n// const React = require('react')\n// const logo = require('./logo.svg')\n// require('./App.css')\n\nfunction ColorBoxes(props) {\n  return (\n    <div className=\"text-center\">\n      <button onClick={props.randomize}>Randomize!</button>\n      <button onClick={props.addBox}>Add Box</button>\n      <button onClick={() => myStore.dispatch({type: 'REMOVE_BOX'})}>Remove Box</button>\n      <div className=\"d-flex justify-content-center\">\n        {props.boxes.map((box, idx) => (\n          <ColorBox {...box} key={idx} toggleLock={() => {props.toggleLock(idx)}}/>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst ConnectedColorBoxes = connect(\n  (state) => {\n    return {\n      boxes: state.boxes\n    }\n  },\n  (dispatch) => {\n    return {\n      randomize: () => {\n        console.log('is this running on click?')\n        return dispatch({\n          type: 'RANDOMIZE'\n        })\n      },\n      addBox: () => {\n        return dispatch({\n          type: 'ADD_BOX'\n        })\n      },\n      toggleLock: (index) => {\n        return dispatch({\n          type: 'TOGGLE_BOX',\n          boxIndex: index\n        })\n      }\n    }\n  }\n)(ColorBoxes)\n\nexport default ConnectedColorBoxes;\n\n// module.exports = App\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport myStore from \"./store\";\n\nconst Profile = (props) => {\n  return (<form>\n    <input\n      onChange={(changeEvent) => {\n        myStore.dispatch({\n          type: \"UPDATE_PROFILE\",\n          firstName: changeEvent.target.value\n        })\n      }}\n      type=\"text\"\n      name=\"firstName\"\n      value={props.profile.firstName}\n    />\n  </form>)\n}\n\nconst ConnectedProfile = connect(\n  (state) => {\n    return {\n      profile: state.profile\n    }\n  }\n)(Profile)\n\nexport default ConnectedProfile;","import React from 'react';\n// import './App.css';\n\nimport ColorBoxes from \"./ColorBoxes\";\nimport Profile from \"./Profile\";\n\n// const React = require('react')\n// const logo = require('./logo.svg')\n// require('./App.css')\n\nfunction App(props) {\n  console.log(props, 'this is no longer the state object')\n  return (\n    <div className=\"container\">\n      <Profile />\n      <ColorBoxes />\n    </div>\n  );\n}\n\nexport default App;\n\n// module.exports = App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport myStore from './store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={myStore}>\n    <App/>\n  </Provider>,\ndocument.getElementById('root'));\n\nwindow.myStore = myStore\n\n// myStore.dispatch({ type: null });\n"],"sourceRoot":""}